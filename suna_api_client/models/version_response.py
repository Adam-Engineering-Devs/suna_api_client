# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


from __future__ import annotations
import pprint
import re  # noqa: F401
import json

from pydantic import BaseModel, ConfigDict, StrictBool, StrictInt, StrictStr
from typing import Any, ClassVar, Dict, List, Optional
from typing import Optional, Set
from typing_extensions import Self

class VersionResponse(BaseModel):
    """
    VersionResponse
    """ # noqa: E501
    version_id: StrictStr
    agent_id: StrictStr
    version_number: StrictInt
    version_name: StrictStr
    system_prompt: StrictStr
    model: Optional[StrictStr] = None
    configured_mcps: List[Dict[str, Any]]
    custom_mcps: List[Dict[str, Any]]
    agentpress_tools: Dict[str, Any]
    is_active: StrictBool
    status: StrictStr
    created_at: StrictStr
    updated_at: StrictStr
    created_by: StrictStr
    change_description: Optional[StrictStr] = None
    previous_version_id: Optional[StrictStr] = None
    __properties: ClassVar[List[str]] = ["version_id", "agent_id", "version_number", "version_name", "system_prompt", "model", "configured_mcps", "custom_mcps", "agentpress_tools", "is_active", "status", "created_at", "updated_at", "created_by", "change_description", "previous_version_id"]

    model_config = ConfigDict(
        populate_by_name=True,
        validate_assignment=True,
        protected_namespaces=(),
    )


    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.model_dump(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        # TODO: pydantic v2: use .model_dump_json(by_alias=True, exclude_unset=True) instead
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> Optional[Self]:
        """Create an instance of VersionResponse from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self) -> Dict[str, Any]:
        """Return the dictionary representation of the model using alias.

        This has the following differences from calling pydantic's
        `self.model_dump(by_alias=True)`:

        * `None` is only added to the output dict for nullable fields that
          were set at model initialization. Other fields with value `None`
          are ignored.
        """
        excluded_fields: Set[str] = set([
        ])

        _dict = self.model_dump(
            by_alias=True,
            exclude=excluded_fields,
            exclude_none=True,
        )
        # set to None if model (nullable) is None
        # and model_fields_set contains the field
        if self.model is None and "model" in self.model_fields_set:
            _dict['model'] = None

        # set to None if change_description (nullable) is None
        # and model_fields_set contains the field
        if self.change_description is None and "change_description" in self.model_fields_set:
            _dict['change_description'] = None

        # set to None if previous_version_id (nullable) is None
        # and model_fields_set contains the field
        if self.previous_version_id is None and "previous_version_id" in self.model_fields_set:
            _dict['previous_version_id'] = None

        return _dict

    @classmethod
    def from_dict(cls, obj: Optional[Dict[str, Any]]) -> Optional[Self]:
        """Create an instance of VersionResponse from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return cls.model_validate(obj)

        _obj = cls.model_validate({
            "version_id": obj.get("version_id"),
            "agent_id": obj.get("agent_id"),
            "version_number": obj.get("version_number"),
            "version_name": obj.get("version_name"),
            "system_prompt": obj.get("system_prompt"),
            "model": obj.get("model"),
            "configured_mcps": obj.get("configured_mcps"),
            "custom_mcps": obj.get("custom_mcps"),
            "agentpress_tools": obj.get("agentpress_tools"),
            "is_active": obj.get("is_active"),
            "status": obj.get("status"),
            "created_at": obj.get("created_at"),
            "updated_at": obj.get("updated_at"),
            "created_by": obj.get("created_by"),
            "change_description": obj.get("change_description"),
            "previous_version_id": obj.get("previous_version_id")
        })
        return _obj


