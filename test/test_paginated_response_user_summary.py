# coding: utf-8

"""
    FastAPI

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: 0.1.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.paginated_response_user_summary import PaginatedResponseUserSummary

class TestPaginatedResponseUserSummary(unittest.TestCase):
    """PaginatedResponseUserSummary unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> PaginatedResponseUserSummary:
        """Test PaginatedResponseUserSummary
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `PaginatedResponseUserSummary`
        """
        model = PaginatedResponseUserSummary()
        if include_optional:
            return PaginatedResponseUserSummary(
                data = [
                    openapi_client.models.user_summary.UserSummary(
                        id = '', 
                        email = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tier = '', 
                        credit_balance = 1.337, 
                        total_purchased = 1.337, 
                        total_used = 1.337, 
                        subscription_status = '', 
                        last_activity = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        trial_status = '', )
                    ],
                pagination = openapi_client.models.pagination_meta.PaginationMeta(
                    current_page = 56, 
                    page_size = 56, 
                    total_items = 56, 
                    total_pages = 56, 
                    has_next = True, 
                    has_previous = True, 
                    next_cursor = '', 
                    previous_cursor = '', )
            )
        else:
            return PaginatedResponseUserSummary(
                data = [
                    openapi_client.models.user_summary.UserSummary(
                        id = '', 
                        email = '', 
                        created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        tier = '', 
                        credit_balance = 1.337, 
                        total_purchased = 1.337, 
                        total_used = 1.337, 
                        subscription_status = '', 
                        last_activity = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                        trial_status = '', )
                    ],
                pagination = openapi_client.models.pagination_meta.PaginationMeta(
                    current_page = 56, 
                    page_size = 56, 
                    total_items = 56, 
                    total_pages = 56, 
                    has_next = True, 
                    has_previous = True, 
                    next_cursor = '', 
                    previous_cursor = '', ),
        )
        """

    def testPaginatedResponseUserSummary(self):
        """Test PaginatedResponseUserSummary"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
